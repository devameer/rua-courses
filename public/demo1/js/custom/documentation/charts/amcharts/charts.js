/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/demo1/js/custom/documentation/charts/amcharts/charts.js":
/*!**********************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/charts/amcharts/charts.js ***!
  \**********************************************************************************/
/***/ (() => {

eval(" // Class definition\n\nvar KTGeneralAmCharts = function () {\n  // Shared variable\n  var chart; // Private functions\n\n  var _demo1 = function _demo1() {\n    // Init AmChart -- for more info, please visit the official documentiation: https://www.amcharts.com/docs/v4/\n    am4core.ready(function () {\n      // Themes begin\n      am4core.useTheme(am4themes_animated); // Themes end\n\n      chart = am4core.create('kt_amcharts_1', am4charts.XYChart);\n      chart.colors.step = 2;\n      chart.legend = new am4charts.Legend();\n      chart.legend.position = 'top';\n      chart.legend.paddingBottom = 20;\n      chart.legend.labels.template.maxWidth = 95;\n      var xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n      xAxis.dataFields.category = 'category';\n      xAxis.renderer.cellStartLocation = 0.1;\n      xAxis.renderer.cellEndLocation = 0.9;\n      xAxis.renderer.grid.template.location = 0;\n      var yAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      yAxis.min = 0;\n\n      function createSeries(value, name) {\n        var series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueY = value;\n        series.dataFields.categoryX = 'category';\n        series.name = name;\n        series.events.on(\"hidden\", arrangeColumns);\n        series.events.on(\"shown\", arrangeColumns);\n        var bullet = series.bullets.push(new am4charts.LabelBullet());\n        bullet.interactionsEnabled = false;\n        bullet.dy = 30;\n        bullet.label.text = '{valueY}';\n        bullet.label.fill = am4core.color('#ffffff');\n        return series;\n      }\n\n      chart.data = [{\n        category: 'Place #1',\n        first: 40,\n        second: 55,\n        third: 60\n      }, {\n        category: 'Place #2',\n        first: 30,\n        second: 78,\n        third: 69\n      }, {\n        category: 'Place #3',\n        first: 27,\n        second: 40,\n        third: 45\n      }, {\n        category: 'Place #4',\n        first: 50,\n        second: 33,\n        third: 22\n      }];\n      createSeries('first', 'The First');\n      createSeries('second', 'The Second');\n      createSeries('third', 'The Third');\n\n      function arrangeColumns() {\n        var series = chart.series.getIndex(0);\n        var w = 1 - xAxis.renderer.cellStartLocation - (1 - xAxis.renderer.cellEndLocation);\n\n        if (series.dataItems.length > 1) {\n          var x0 = xAxis.getX(series.dataItems.getIndex(0), \"categoryX\");\n          var x1 = xAxis.getX(series.dataItems.getIndex(1), \"categoryX\");\n          var delta = (x1 - x0) / chart.series.length * w;\n\n          if (am4core.isNumber(delta)) {\n            var middle = chart.series.length / 2;\n            var newIndex = 0;\n            chart.series.each(function (series) {\n              if (!series.isHidden && !series.isHiding) {\n                series.dummyData = newIndex;\n                newIndex++;\n              } else {\n                series.dummyData = chart.series.indexOf(series);\n              }\n            });\n            var visibleCount = newIndex;\n            var newMiddle = visibleCount / 2;\n            chart.series.each(function (series) {\n              var trueIndex = chart.series.indexOf(series);\n              var newIndex = series.dummyData;\n              var dx = (newIndex - trueIndex + middle - newMiddle) * delta;\n              series.animate({\n                property: \"dx\",\n                to: dx\n              }, series.interpolationDuration, series.interpolationEasing);\n              series.bulletsContainer.animate({\n                property: \"dx\",\n                to: dx\n              }, series.interpolationDuration, series.interpolationEasing);\n            });\n          }\n        }\n      }\n    }); // end am4core.ready()\n  };\n\n  var _demo2 = function _demo2() {\n    // Init AmChart -- for more info, please visit the official documentiation: https://www.amcharts.com/docs/v4/\n    am4core.ready(function () {\n      // Themes begin\n      am4core.useTheme(am4themes_animated); // Themes end\n      // Create chart\n\n      chart = am4core.create(\"kt_amcharts_2\", am4charts.XYChart);\n      var data = [];\n      var price1 = 1000,\n          price2 = 1200;\n      var quantity = 30000;\n\n      for (var i = 0; i < 360; i++) {\n        price1 += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 100);\n        data.push({\n          date1: new Date(2015, 0, i),\n          price1: price1\n        });\n      }\n\n      for (var i = 0; i < 360; i++) {\n        price2 += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 100);\n        data.push({\n          date2: new Date(2017, 0, i),\n          price2: price2\n        });\n      }\n\n      chart.data = data;\n      var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis.renderer.grid.template.location = 0;\n      dateAxis.renderer.labels.template.fill = am4core.color(\"#e59165\");\n      var dateAxis2 = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis2.renderer.grid.template.location = 0;\n      dateAxis2.renderer.labels.template.fill = am4core.color(\"#dfcc64\");\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.tooltip.disabled = true;\n      valueAxis.renderer.labels.template.fill = am4core.color(\"#e59165\");\n      valueAxis.renderer.minWidth = 60;\n      var valueAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis2.tooltip.disabled = true;\n      valueAxis2.renderer.labels.template.fill = am4core.color(\"#dfcc64\");\n      valueAxis2.renderer.minWidth = 60;\n      valueAxis2.syncWithAxis = valueAxis;\n      var series = chart.series.push(new am4charts.LineSeries());\n      series.name = \"2015\";\n      series.dataFields.dateX = \"date1\";\n      series.dataFields.valueY = \"price1\";\n      series.tooltipText = \"{valueY.value}\";\n      series.fill = am4core.color(\"#e59165\");\n      series.stroke = am4core.color(\"#e59165\"); //series.strokeWidth = 3;\n\n      var series2 = chart.series.push(new am4charts.LineSeries());\n      series2.name = \"2017\";\n      series2.dataFields.dateX = \"date2\";\n      series2.dataFields.valueY = \"price2\";\n      series2.yAxis = valueAxis2;\n      series2.xAxis = dateAxis2;\n      series2.tooltipText = \"{valueY.value}\";\n      series2.fill = am4core.color(\"#dfcc64\");\n      series2.stroke = am4core.color(\"#dfcc64\"); //series2.strokeWidth = 3;\n\n      chart.cursor = new am4charts.XYCursor();\n      chart.cursor.xAxis = dateAxis2;\n      var scrollbarX = new am4charts.XYChartScrollbar();\n      scrollbarX.series.push(series);\n      chart.scrollbarX = scrollbarX;\n      chart.legend = new am4charts.Legend();\n      chart.legend.parent = chart.plotContainer;\n      chart.legend.zIndex = 100;\n      valueAxis2.renderer.grid.template.strokeOpacity = 0.07;\n      dateAxis2.renderer.grid.template.strokeOpacity = 0.07;\n      dateAxis.renderer.grid.template.strokeOpacity = 0.07;\n      valueAxis.renderer.grid.template.strokeOpacity = 0.07;\n    }); // end am4core.ready()\n  };\n\n  var _demo3 = function _demo3() {\n    // Init AmChart -- for more info, please visit the official documentiation: https://www.amcharts.com/docs/v4/\n    am4core.ready(function () {\n      // Themes begin\n      am4core.useTheme(am4themes_dataviz);\n      am4core.useTheme(am4themes_animated); // Themes end\n      // Create chart\n\n      chart = am4core.create(\"kt_amcharts_3\", am4charts.PieChart);\n      chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\n\n      chart.data = [{\n        country: \"Lithuania\",\n        value: 260\n      }, {\n        country: \"Czechia\",\n        value: 230\n      }, {\n        country: \"Ireland\",\n        value: 200\n      }, {\n        country: \"Germany\",\n        value: 165\n      }, {\n        country: \"Australia\",\n        value: 139\n      }, {\n        country: \"Austria\",\n        value: 128\n      }];\n      var series = chart.series.push(new am4charts.PieSeries());\n      series.dataFields.value = \"value\";\n      series.dataFields.radiusValue = \"value\";\n      series.dataFields.category = \"country\";\n      series.slices.template.cornerRadius = 6;\n      series.colors.step = 3;\n      series.hiddenState.properties.endAngle = -90;\n      chart.legend = new am4charts.Legend();\n    }); // end am4core.ready()\n  };\n\n  var _demo4 = function _demo4() {\n    // Init AmChart -- for more info, please visit the official documentiation: https://www.amcharts.com/docs/v4/\n    am4core.ready(function () {\n      // Themes begin\n      am4core.useTheme(am4themes_frozen);\n      am4core.useTheme(am4themes_animated); // Themes end\n\n      chart = am4core.create(\"kt_amcharts_4\", am4plugins_timeline.SerpentineChart);\n      chart.curveContainer.padding(20, 20, 20, 20);\n      chart.levelCount = 8;\n      chart.orientation = \"horizontal\";\n      chart.fontSize = 11;\n      var colorSet = new am4core.ColorSet();\n      colorSet.saturation = 0.6;\n      chart.data = [{\n        \"category\": \"Module #1\",\n        \"start\": \"2016-01-10\",\n        \"end\": \"2016-01-13\",\n        \"color\": colorSet.getIndex(0),\n        \"task\": \"Gathering requirements\"\n      }, {\n        \"category\": \"Module #1\",\n        \"start\": \"2016-02-05\",\n        \"end\": \"2016-04-18\",\n        \"color\": colorSet.getIndex(0),\n        \"task\": \"Development\"\n      }, {\n        \"category\": \"Module #2\",\n        \"start\": \"2016-01-08\",\n        \"end\": \"2016-01-10\",\n        \"color\": colorSet.getIndex(5),\n        \"task\": \"Gathering requirements\"\n      }, {\n        \"category\": \"Module #2\",\n        \"start\": \"2016-01-12\",\n        \"end\": \"2016-01-15\",\n        \"color\": colorSet.getIndex(5),\n        \"task\": \"Producing specifications\"\n      }, {\n        \"category\": \"Module #2\",\n        \"start\": \"2016-01-16\",\n        \"end\": \"2016-02-05\",\n        \"color\": colorSet.getIndex(5),\n        \"task\": \"Development\"\n      }, {\n        \"category\": \"Module #2\",\n        \"start\": \"2016-02-10\",\n        \"end\": \"2016-02-18\",\n        \"color\": colorSet.getIndex(5),\n        \"task\": \"Testing and QA\"\n      }, {\n        \"category\": \"\",\n        \"task\": \"\"\n      }, {\n        \"category\": \"Module #3\",\n        \"start\": \"2016-01-01\",\n        \"end\": \"2016-01-19\",\n        \"color\": colorSet.getIndex(9),\n        \"task\": \"Gathering requirements\"\n      }, {\n        \"category\": \"Module #3\",\n        \"start\": \"2016-02-01\",\n        \"end\": \"2016-02-10\",\n        \"color\": colorSet.getIndex(9),\n        \"task\": \"Producing specifications\"\n      }, {\n        \"category\": \"Module #3\",\n        \"start\": \"2016-03-10\",\n        \"end\": \"2016-04-15\",\n        \"color\": colorSet.getIndex(9),\n        \"task\": \"Development\"\n      }, {\n        \"category\": \"Module #3\",\n        \"start\": \"2016-04-20\",\n        \"end\": \"2016-04-30\",\n        \"color\": colorSet.getIndex(9),\n        \"task\": \"Testing and QA\"\n      }, {\n        \"category\": \"Module #4\",\n        \"start\": \"2016-01-15\",\n        \"end\": \"2016-02-12\",\n        \"color\": colorSet.getIndex(15),\n        \"task\": \"Gathering requirements\"\n      }, {\n        \"category\": \"Module #4\",\n        \"start\": \"2016-02-25\",\n        \"end\": \"2016-03-10\",\n        \"color\": colorSet.getIndex(15),\n        \"task\": \"Development\"\n      }, {\n        \"category\": \"Module #4\",\n        \"start\": \"2016-03-23\",\n        \"end\": \"2016-04-29\",\n        \"color\": colorSet.getIndex(15),\n        \"task\": \"Testing and QA\"\n      }];\n      chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n      chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\n      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n      categoryAxis.dataFields.category = \"category\";\n      categoryAxis.renderer.grid.template.disabled = true;\n      categoryAxis.renderer.labels.template.paddingRight = 25;\n      categoryAxis.renderer.minGridDistance = 10;\n      categoryAxis.renderer.innerRadius = -60;\n      categoryAxis.renderer.radius = 60;\n      var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis.renderer.minGridDistance = 70;\n      dateAxis.baseInterval = {\n        count: 1,\n        timeUnit: \"day\"\n      };\n      dateAxis.renderer.tooltipLocation = 0;\n      dateAxis.startLocation = -0.5;\n      dateAxis.renderer.line.strokeDasharray = \"1,4\";\n      dateAxis.renderer.line.strokeOpacity = 0.7;\n      dateAxis.tooltip.background.fillOpacity = 0.2;\n      dateAxis.tooltip.background.cornerRadius = 5;\n      dateAxis.tooltip.label.fill = new am4core.InterfaceColorSet().getFor(\"alternativeBackground\");\n      dateAxis.tooltip.label.paddingTop = 7;\n      var labelTemplate = dateAxis.renderer.labels.template;\n      labelTemplate.verticalCenter = \"middle\";\n      labelTemplate.fillOpacity = 0.7;\n      labelTemplate.background.fill = new am4core.InterfaceColorSet().getFor(\"background\");\n      labelTemplate.background.fillOpacity = 1;\n      labelTemplate.padding(7, 7, 7, 7);\n      var categoryAxisLabelTemplate = categoryAxis.renderer.labels.template;\n      categoryAxisLabelTemplate.horizontalCenter = \"left\";\n      categoryAxisLabelTemplate.adapter.add(\"rotation\", function (rotation, target) {\n        var position = dateAxis.valueToPosition(dateAxis.min);\n        return dateAxis.renderer.positionToAngle(position) + 90;\n      });\n      var series1 = chart.series.push(new am4plugins_timeline.CurveColumnSeries());\n      series1.columns.template.height = am4core.percent(20);\n      series1.columns.template.tooltipText = \"{task}: [bold]{openDateX}[/] - [bold]{dateX}[/]\";\n      series1.dataFields.openDateX = \"start\";\n      series1.dataFields.dateX = \"end\";\n      series1.dataFields.categoryY = \"category\";\n      series1.columns.template.propertyFields.fill = \"color\"; // get color from data\n\n      series1.columns.template.propertyFields.stroke = \"color\";\n      series1.columns.template.strokeOpacity = 0;\n      var bullet = new am4charts.CircleBullet();\n      series1.bullets.push(bullet);\n      bullet.circle.radius = 3;\n      bullet.circle.strokeOpacity = 0;\n      bullet.propertyFields.fill = \"color\";\n      bullet.locationX = 0;\n      var bullet2 = new am4charts.CircleBullet();\n      series1.bullets.push(bullet2);\n      bullet2.circle.radius = 3;\n      bullet2.circle.strokeOpacity = 0;\n      bullet2.propertyFields.fill = \"color\";\n      bullet2.locationX = 1;\n      chart.scrollbarX = new am4core.Scrollbar();\n      chart.scrollbarX.align = \"center\";\n      chart.scrollbarX.width = am4core.percent(90);\n      var cursor = new am4plugins_timeline.CurveCursor();\n      chart.cursor = cursor;\n      cursor.xAxis = dateAxis;\n      cursor.yAxis = categoryAxis;\n      cursor.lineY.disabled = true;\n      cursor.lineX.strokeDasharray = \"1,4\";\n      cursor.lineX.strokeOpacity = 1;\n      dateAxis.renderer.tooltipLocation2 = 0;\n      categoryAxis.cursorTooltipEnabled = false;\n    }); // end am4core.ready()\n  };\n\n  var _demo5 = function _demo5() {\n    // Init AmChart -- for more info, please visit the official documentiation: https://www.amcharts.com/docs/v4/\n    am4core.ready(function () {\n      // Themes begin\n      am4core.useTheme(am4themes_animated); // Themes end\n\n      chart = am4core.create(\"kt_amcharts_5\", am4charts.RadarChart);\n      chart.innerRadius = am4core.percent(30);\n      chart.fontSize = 11;\n      var xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n      var yAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n      yAxis.renderer.minGridDistance = 5;\n      xAxis.renderer.labels.template.location = 0.5;\n      xAxis.renderer.labels.template.bent = true;\n      xAxis.renderer.labels.template.radius = 5;\n      xAxis.dataFields.category = \"hour\";\n      yAxis.dataFields.category = \"weekday\";\n      xAxis.renderer.grid.template.disabled = true;\n      xAxis.renderer.minGridDistance = 10;\n      yAxis.renderer.grid.template.disabled = true;\n      yAxis.renderer.inversed = true; // this makes the y axis labels to be bent. By default y Axis labels are regular AxisLabels, so we replace them with AxisLabelCircular\n      // and call fixPosition for them to be bent\n\n      var yAxisLabel = new am4charts.AxisLabelCircular();\n      yAxisLabel.bent = true;\n      yAxisLabel.events.on(\"validated\", function (event) {\n        event.target.fixPosition(-90, am4core.math.getDistance({\n          x: event.target.pixelX,\n          y: event.target.pixelY\n        }) - 5);\n        event.target.dx = -event.target.pixelX;\n        event.target.dy = -event.target.pixelY;\n      });\n      yAxis.renderer.labels.template = yAxisLabel;\n      var series = chart.series.push(new am4charts.RadarColumnSeries());\n      series.dataFields.categoryX = \"hour\";\n      series.dataFields.categoryY = \"weekday\";\n      series.dataFields.value = \"value\";\n      series.sequencedInterpolation = true;\n      var columnTemplate = series.columns.template;\n      columnTemplate.strokeWidth = 2;\n      columnTemplate.strokeOpacity = 1;\n      columnTemplate.stroke = am4core.color(\"#ffffff\");\n      columnTemplate.tooltipText = \"{weekday}, {hour}: {value.workingValue.formatNumber('#.')}\";\n      columnTemplate.width = am4core.percent(100);\n      columnTemplate.height = am4core.percent(100);\n      chart.seriesContainer.zIndex = -5;\n      columnTemplate.hiddenState.properties.opacity = 0; // heat rule, this makes columns to change color depending on value\n\n      series.heatRules.push({\n        target: columnTemplate,\n        property: \"fill\",\n        min: am4core.color(\"#fffb77\"),\n        max: am4core.color(\"#fe131a\")\n      }); // heat legend\n\n      var heatLegend = chart.bottomAxesContainer.createChild(am4charts.HeatLegend);\n      heatLegend.width = am4core.percent(100);\n      heatLegend.series = series;\n      heatLegend.valueAxis.renderer.labels.template.fontSize = 9;\n      heatLegend.valueAxis.renderer.minGridDistance = 30; // heat legend behavior\n\n      series.columns.template.events.on(\"over\", function (event) {\n        handleHover(event.target);\n      });\n      series.columns.template.events.on(\"hit\", function (event) {\n        handleHover(event.target);\n      });\n\n      function handleHover(column) {\n        if (!isNaN(column.dataItem.value)) {\n          heatLegend.valueAxis.showTooltipAt(column.dataItem.value);\n        } else {\n          heatLegend.valueAxis.hideTooltip();\n        }\n      }\n\n      series.columns.template.events.on(\"out\", function (event) {\n        heatLegend.valueAxis.hideTooltip();\n      });\n      chart.data = [{\n        \"hour\": \"12pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2990\n      }, {\n        \"hour\": \"1am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2520\n      }, {\n        \"hour\": \"2am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2334\n      }, {\n        \"hour\": \"3am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2230\n      }, {\n        \"hour\": \"4am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2325\n      }, {\n        \"hour\": \"5am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2019\n      }, {\n        \"hour\": \"6am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2128\n      }, {\n        \"hour\": \"7am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2246\n      }, {\n        \"hour\": \"8am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2421\n      }, {\n        \"hour\": \"9am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2788\n      }, {\n        \"hour\": \"10am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 2959\n      }, {\n        \"hour\": \"11am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3018\n      }, {\n        \"hour\": \"12am\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3154\n      }, {\n        \"hour\": \"1pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3172\n      }, {\n        \"hour\": \"2pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3368\n      }, {\n        \"hour\": \"3pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3464\n      }, {\n        \"hour\": \"4pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3746\n      }, {\n        \"hour\": \"5pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3656\n      }, {\n        \"hour\": \"6pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3336\n      }, {\n        \"hour\": \"7pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3292\n      }, {\n        \"hour\": \"8pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3269\n      }, {\n        \"hour\": \"9pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3300\n      }, {\n        \"hour\": \"10pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3403\n      }, {\n        \"hour\": \"11pm\",\n        \"weekday\": \"Sunday\",\n        \"value\": 3323\n      }, {\n        \"hour\": \"12pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 3346\n      }, {\n        \"hour\": \"1am\",\n        \"weekday\": \"Monday\",\n        \"value\": 2725\n      }, {\n        \"hour\": \"2am\",\n        \"weekday\": \"Monday\",\n        \"value\": 3052\n      }, {\n        \"hour\": \"3am\",\n        \"weekday\": \"Monday\",\n        \"value\": 3876\n      }, {\n        \"hour\": \"4am\",\n        \"weekday\": \"Monday\",\n        \"value\": 4453\n      }, {\n        \"hour\": \"5am\",\n        \"weekday\": \"Monday\",\n        \"value\": 3972\n      }, {\n        \"hour\": \"6am\",\n        \"weekday\": \"Monday\",\n        \"value\": 4644\n      }, {\n        \"hour\": \"7am\",\n        \"weekday\": \"Monday\",\n        \"value\": 5715\n      }, {\n        \"hour\": \"8am\",\n        \"weekday\": \"Monday\",\n        \"value\": 7080\n      }, {\n        \"hour\": \"9am\",\n        \"weekday\": \"Monday\",\n        \"value\": 8022\n      }, {\n        \"hour\": \"10am\",\n        \"weekday\": \"Monday\",\n        \"value\": 8446\n      }, {\n        \"hour\": \"11am\",\n        \"weekday\": \"Monday\",\n        \"value\": 9313\n      }, {\n        \"hour\": \"12am\",\n        \"weekday\": \"Monday\",\n        \"value\": 9011\n      }, {\n        \"hour\": \"1pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 8508\n      }, {\n        \"hour\": \"2pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 8515\n      }, {\n        \"hour\": \"3pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 8399\n      }, {\n        \"hour\": \"4pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 8649\n      }, {\n        \"hour\": \"5pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 7869\n      }, {\n        \"hour\": \"6pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 6933\n      }, {\n        \"hour\": \"7pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 5969\n      }, {\n        \"hour\": \"8pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 5552\n      }, {\n        \"hour\": \"9pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 5434\n      }, {\n        \"hour\": \"10pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 5070\n      }, {\n        \"hour\": \"11pm\",\n        \"weekday\": \"Monday\",\n        \"value\": 4851\n      }, {\n        \"hour\": \"12pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 4468\n      }, {\n        \"hour\": \"1am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 3306\n      }, {\n        \"hour\": \"2am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 3906\n      }, {\n        \"hour\": \"3am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 4413\n      }, {\n        \"hour\": \"4am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 4726\n      }, {\n        \"hour\": \"5am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 4584\n      }, {\n        \"hour\": \"6am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 5717\n      }, {\n        \"hour\": \"7am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 6504\n      }, {\n        \"hour\": \"8am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 8104\n      }, {\n        \"hour\": \"9am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 8813\n      }, {\n        \"hour\": \"10am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 9278\n      }, {\n        \"hour\": \"11am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 10425\n      }, {\n        \"hour\": \"12am\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 10137\n      }, {\n        \"hour\": \"1pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 9290\n      }, {\n        \"hour\": \"2pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 9255\n      }, {\n        \"hour\": \"3pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 9614\n      }, {\n        \"hour\": \"4pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 9713\n      }, {\n        \"hour\": \"5pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 9667\n      }, {\n        \"hour\": \"6pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 8774\n      }, {\n        \"hour\": \"7pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 8649\n      }, {\n        \"hour\": \"8pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 9937\n      }, {\n        \"hour\": \"9pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 10286\n      }, {\n        \"hour\": \"10pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 9175\n      }, {\n        \"hour\": \"11pm\",\n        \"weekday\": \"Tuesday\",\n        \"value\": 8581\n      }, {\n        \"hour\": \"12pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 8145\n      }, {\n        \"hour\": \"1am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 7177\n      }, {\n        \"hour\": \"2am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 5657\n      }, {\n        \"hour\": \"3am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 6802\n      }, {\n        \"hour\": \"4am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 8159\n      }, {\n        \"hour\": \"5am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 8449\n      }, {\n        \"hour\": \"6am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 9453\n      }, {\n        \"hour\": \"7am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 9947\n      }, {\n        \"hour\": \"8am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 11471\n      }, {\n        \"hour\": \"9am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 12492\n      }, {\n        \"hour\": \"10am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 9388\n      }, {\n        \"hour\": \"11am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 9928\n      }, {\n        \"hour\": \"12am\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 9644\n      }, {\n        \"hour\": \"1pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 9034\n      }, {\n        \"hour\": \"2pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 8964\n      }, {\n        \"hour\": \"3pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 9069\n      }, {\n        \"hour\": \"4pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 8898\n      }, {\n        \"hour\": \"5pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 8322\n      }, {\n        \"hour\": \"6pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 6909\n      }, {\n        \"hour\": \"7pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 5810\n      }, {\n        \"hour\": \"8pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 5151\n      }, {\n        \"hour\": \"9pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 4911\n      }, {\n        \"hour\": \"10pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 4487\n      }, {\n        \"hour\": \"11pm\",\n        \"weekday\": \"Wednesday\",\n        \"value\": 4118\n      }, {\n        \"hour\": \"12pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 3689\n      }, {\n        \"hour\": \"1am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 3081\n      }, {\n        \"hour\": \"2am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 6525\n      }, {\n        \"hour\": \"3am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 6228\n      }, {\n        \"hour\": \"4am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 6917\n      }, {\n        \"hour\": \"5am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 6568\n      }, {\n        \"hour\": \"6am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 6405\n      }, {\n        \"hour\": \"7am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 8106\n      }, {\n        \"hour\": \"8am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 8542\n      }, {\n        \"hour\": \"9am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 8501\n      }, {\n        \"hour\": \"10am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 8802\n      }, {\n        \"hour\": \"11am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 9420\n      }, {\n        \"hour\": \"12am\",\n        \"weekday\": \"Thursday\",\n        \"value\": 8966\n      }, {\n        \"hour\": \"1pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 8135\n      }, {\n        \"hour\": \"2pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 8224\n      }, {\n        \"hour\": \"3pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 8387\n      }, {\n        \"hour\": \"4pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 8218\n      }, {\n        \"hour\": \"5pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 7641\n      }, {\n        \"hour\": \"6pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 6469\n      }, {\n        \"hour\": \"7pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 5441\n      }, {\n        \"hour\": \"8pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 4952\n      }, {\n        \"hour\": \"9pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 4643\n      }, {\n        \"hour\": \"10pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 4393\n      }, {\n        \"hour\": \"11pm\",\n        \"weekday\": \"Thursday\",\n        \"value\": 4017\n      }, {\n        \"hour\": \"12pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 4022\n      }, {\n        \"hour\": \"1am\",\n        \"weekday\": \"Friday\",\n        \"value\": 3063\n      }, {\n        \"hour\": \"2am\",\n        \"weekday\": \"Friday\",\n        \"value\": 3638\n      }, {\n        \"hour\": \"3am\",\n        \"weekday\": \"Friday\",\n        \"value\": 3968\n      }, {\n        \"hour\": \"4am\",\n        \"weekday\": \"Friday\",\n        \"value\": 4070\n      }, {\n        \"hour\": \"5am\",\n        \"weekday\": \"Friday\",\n        \"value\": 4019\n      }, {\n        \"hour\": \"6am\",\n        \"weekday\": \"Friday\",\n        \"value\": 4548\n      }, {\n        \"hour\": \"7am\",\n        \"weekday\": \"Friday\",\n        \"value\": 5465\n      }, {\n        \"hour\": \"8am\",\n        \"weekday\": \"Friday\",\n        \"value\": 6909\n      }, {\n        \"hour\": \"9am\",\n        \"weekday\": \"Friday\",\n        \"value\": 7706\n      }, {\n        \"hour\": \"10am\",\n        \"weekday\": \"Friday\",\n        \"value\": 7867\n      }, {\n        \"hour\": \"11am\",\n        \"weekday\": \"Friday\",\n        \"value\": 8615\n      }, {\n        \"hour\": \"12am\",\n        \"weekday\": \"Friday\",\n        \"value\": 8218\n      }, {\n        \"hour\": \"1pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 7604\n      }, {\n        \"hour\": \"2pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 7429\n      }, {\n        \"hour\": \"3pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 7488\n      }, {\n        \"hour\": \"4pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 7493\n      }, {\n        \"hour\": \"5pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 6998\n      }, {\n        \"hour\": \"6pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 5941\n      }, {\n        \"hour\": \"7pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 5068\n      }, {\n        \"hour\": \"8pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 4636\n      }, {\n        \"hour\": \"9pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 4241\n      }, {\n        \"hour\": \"10pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 3858\n      }, {\n        \"hour\": \"11pm\",\n        \"weekday\": \"Friday\",\n        \"value\": 3833\n      }, {\n        \"hour\": \"12pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3503\n      }, {\n        \"hour\": \"1am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 2842\n      }, {\n        \"hour\": \"2am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 2808\n      }, {\n        \"hour\": \"3am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 2399\n      }, {\n        \"hour\": \"4am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 2280\n      }, {\n        \"hour\": \"5am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 2139\n      }, {\n        \"hour\": \"6am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 2527\n      }, {\n        \"hour\": \"7am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 2940\n      }, {\n        \"hour\": \"8am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3066\n      }, {\n        \"hour\": \"9am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3494\n      }, {\n        \"hour\": \"10am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3287\n      }, {\n        \"hour\": \"11am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3416\n      }, {\n        \"hour\": \"12am\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3432\n      }, {\n        \"hour\": \"1pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3523\n      }, {\n        \"hour\": \"2pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3542\n      }, {\n        \"hour\": \"3pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3347\n      }, {\n        \"hour\": \"4pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3292\n      }, {\n        \"hour\": \"5pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3416\n      }, {\n        \"hour\": \"6pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3131\n      }, {\n        \"hour\": \"7pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3057\n      }, {\n        \"hour\": \"8pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3227\n      }, {\n        \"hour\": \"9pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 3060\n      }, {\n        \"hour\": \"10pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 2855\n      }, {\n        \"hour\": \"11pm\",\n        \"weekday\": \"Saturday\",\n        \"value\": 2625\n      }];\n    }); // end am4core.ready()\n  };\n\n  return {\n    // Public Functions\n    init: function init() {\n      _demo1();\n\n      _demo2();\n\n      _demo3();\n\n      _demo4();\n\n      _demo5();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTGeneralAmCharts.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/charts/amcharts/charts.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/charts/amcharts/charts.js"]();
/******/ 	
/******/ })()
;